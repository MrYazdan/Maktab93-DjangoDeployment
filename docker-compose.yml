version: "3.9"
services:
  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    ports:
      - "${REDIS_PORT}"
    env_file:
      - ./envs/redis.env
#    command: >
#      /bin/sh -c "echo 'Starting redis service ...'" &&
#      redis-server --requirepass '${REDIS_PASSWORD}' --loglevel ${REDIS_LOG_LEVEL} --logfile /var/redis/logs/redis.log
#    volumes:
#      - ./services/redis/config/redis.conf:/etc/redis.conf
#      - ./logs/redis/:/var/redis/logs/

  db:
    container_name: db
    image: postgres:alpine
    restart: always
    ports:
      - "${DB_PORT}"
    env_file:
      - ./envs/db.env
    volumes:
      - ./backup/db/:/var/lib/postgresql/data/

  api:
    container_name: api
    build: .
    expose:
      - "${API_PORT}"
    restart: always
    env_file:
      - ./envs/django.env
    command: >
      /bin/sh -c "python manage.py makemigrations &&
                  python manage.py migrate &&
                  python manage.py collectstatic --no-input &&
                  gunicorn --bind 0.0.0.0:${API_PORT} config.wsgi:application --log-level=${API_LOG_LEVEL} --workers=${API_WORKERS} --threads=${API_THREADS} --access-logfile='logs/api.log'"
    volumes:
      - ./volumes/api/static/:/usr/src/app/static/
      - ./volumes/api/media/:/usr/src/app/media/
      - ./logs/api/:/usr/src/app/logs/
    depends_on:
      - db

  nginx:
    container_name: nginx
    build: ./services/nginx/
    restart: always
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./volumes/api/static/:/home/app/static/
      - ./volumes/api/media/:/home/app/media/
      - ./services/nginx/config/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api